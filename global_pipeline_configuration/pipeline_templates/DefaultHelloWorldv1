//library 'libTest@' + pipelineConfig.keywords.library_version

//build(pipelineConfig.keywords.build_tool)


//def library = jte.libraries
//def buildStep = library.build
//buildStep()
//def spec = pipelineConfig.libraries

//echo "libraries: ${spec}"

import org.boozallen.plugins.jte.init.governance.config.ScmPipelineConfigurationProvider
import org.boozallen.plugins.jte.util.TemplateLogger

FileSystemWrapper fsw = FileSystemWrapper.createFromJob(flowOwner)
//import org.jenkinsci.plugins.workflow.flow.FlowExecutionOwner
//import org.boozallen.plugins.jte.init.governance.config.dsl.PipelineConfigurationObject
import org.boozallen.plugins.jte.init.governance.config.dsl.PipelineConfigurationDsl

string CONFIG_FILE="teste.groovy"
configurationPath = ScmPipelineConfigurationProvider.CONFIG_FILE
String repoConfigFile = fsw.getFileContents(configurationPath, "Template Configuration File", false)


if (repoConfigFile){
                try{
                    jobConfig = new PipelineConfigurationDsl(flowOwner).parse(repoConfigFile)
                } catch(any){
                    TemplateLogger logger = new TemplateLogger(flowOwner.getListener())
                    logger.printError("Error parsing ${job.getName()}'s configuration file in SCM.")
                    throw any
                }
            }


// node {


// FlowExecutionOwner owner = CpsThread.current().getExecution().getOwner()
// PipelineConfigurationDsl dsl = new PipelineConfigurationDsl(owner)
// dsl.firstConfig = true


// String pipelineConfigurationAsString = readFile("./pipeline_config.groovy")
// //PipelineConfigurationProvider.getConfig(owner)


// // After this point I cannot do 'sh' or 'writeFile' anymore and it throws: "java.io.NotSerializableException: org.boozallen.plugins.jte.init.governance.config.dsl.PipelineConfigurationDsl"
// PipelineConfigurationObject pipelineConfigurationObject = dsl.parse(pipelineConfigurationAsString)
// }